services:
  postgres_mattermost:
    image: postgres:15
    hostname: postgres_mattermost
    restart: unless-stopped
    networks:
      - mattermost_net
    env_file:
      - .env
    volumes:
      - mattermost_db_data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  mattermost:
    image: mattermost/mattermost-team-edition:latest
    restart: unless-stopped
    depends_on:
      postgres_mattermost:
        condition: service_healthy
    env_file:
      - .env
    expose:
      - "8065"
    environment:
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_mattermost:5432/${POSTGRES_DB}?sslmode=disable
      MM_LOGSETTINGS_ENABLECONSOLE: "true"
      MM_LOGSETTINGS_CONSOLELEVEL: INFO
    volumes:
      - mattermost_app_data:/mattermost/data
    networks:
      - ogna
      - mattermost_net
    # No need for "ports" if your reverse proxy connects via "ogna"

networks:
  mattermost_net:
  ogna:
    external: true

volumes:
  mattermost_db_data:
  mattermost_app_data:
